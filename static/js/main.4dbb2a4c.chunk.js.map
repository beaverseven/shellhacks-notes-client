{"version":3,"sources":["NotesTable.js","Api.js","HomePage.js","App.js","index.js"],"names":["NotesTable","props","Table","TableHead","TableRow","TableCell","TableBody","rows","map","document","idx","school","subject","course","notes","getNotes","queryParams","url","qs","stringify","request","method","params","headers","axios","then","response","data","HomePage","useState","setNotes","setQueryParams","isLoading","setLoading","res","catch","e","console","log","finally","useEffect","fetchNotes","class","label","options","value","placeholder","onChange","selectedOption","updatedParams","omit","TextField","fullWidth","type","target","App","className","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.4dbb2a4c.chunk.js","sourcesContent":["import {\n  Table,\n  TableBody,\n  TableHead,\n  TableRow,\n  TableCell,\n} from \"@mui/material\";\nimport React from \"react\";\n\nexport default function NotesTable(props) {\n  return (\n    <Table>\n      <TableHead>\n        <TableRow>\n          <TableCell>School</TableCell>\n          <TableCell>Subject</TableCell>\n          <TableCell>Course</TableCell>\n          <TableCell>Notes</TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {props.rows.map((document, idx) => {\n          return (\n            <TableRow key={idx}>\n              <TableCell>{document.school}</TableCell>\n              <TableCell>{document.subject}</TableCell>\n              <TableCell>{document.course || \"--\"}</TableCell>\n              <TableCell>{document.notes}</TableCell>\n            </TableRow>\n          );\n        })}\n      </TableBody>\n    </Table>\n  );\n}\n","import axios from \"axios\";\nimport qs from \"qs\";\n\nexport async function getNotes(queryParams) {\n  const url = `http://localhost:3001/get?${qs.stringify(queryParams)}`;\n\n  const request = {\n    method: \"get\",\n    url: url,\n    params: {},\n    headers: {},\n  };\n\n  return await axios(request).then((response) => response.data);\n}\n","import React, { useEffect, useState } from \"react\";\nimport { omit, update } from \"lodash\";\nimport NotesTable from \"./NotesTable\";\nimport { getNotes } from \"./Api\";\nimport Select, {components} from 'react-select';\nimport './index.css';\nimport { TextField } from \"@mui/material\";\n\nexport default function HomePage() {\n  const [notes, setNotes] = useState([]);\n  const [queryParams, setQueryParams] = useState({});\n  const [isLoading, setLoading] = useState(true);\n\n  async function fetchNotes() {\n    setLoading(true);\n    await getNotes(queryParams)\n      .then((res) => {\n        setNotes(res.rows);\n      })\n      .catch((e) => console.log(\"error getting notes\"))\n      .finally(() => setLoading(false));\n  }\n\n  useEffect(() => {\n    fetchNotes();\n  }, [queryParams]);\n\n  const handleChange = selectedOption => {\n    console.log('handleChange',selectedOption)\n\n  }\n\n  const SchoolOptions = [\n    {value : 'CUNY Hunter College', label : \"CUNY Hunter College\"},\n    {value : \"Staten Island College\", label: \"Staten Island College\"},\n    {value : \"Kings Borough College\", label: \"Kings Borough College\"},\n  ]\n\n  const SubjectOptions = [\n    {value : 'Data Structures & Algorithms', label: \"Data Structures & Algorithms\"},\n    {value : \"Biology\" , label: \"Biology\"},\n    {value : \"Computer Science\", label: \"Computer Science\"},\n  ]\n\n  const CourseOptions = [\n    {value : \"CSCI 335\", label: \"CSCI 335\"}\n  ]\n\n  //Helper Function\n\n  \n\n\n  \n\n  return (\n    <>\n\n    <div class = \"header\">\n      <p class = \"logo\"> NFF</p>\n      <button class = \"button\"> + </button>\n        \n    </div>\n    <div class = \"body\">\n\n      <h1 class = \"text\"> Welcome To NoteFinder Free! To start, search up notes on a particular topic (Ex. Trees), and feel free to search by your school if need be!</h1>\n      \n\n      {/* dropdown school filter */}\n\n      <div class = \"Scroll\">\n\n      \n\n      <Select class = \"schoolScroll\" label = \"School\" options = {SchoolOptions}\n        placeholder = \"School\" \n        onChange = {(selectedOption) => {\n          const value = selectedOption.value;\n          const updatedParams = value\n            ? {\n                ...queryParams,\n                school: value,\n            }\n            : omit(queryParams, \"school\");\n\n            setQueryParams(updatedParams);\n\n        }\n        }\n      /> \n    \n      {/* dropdown subject filter */}\n\n      <Select \n      placeholder = \"Subject\"\n      label = \"Subject\" \n      options = {SubjectOptions}\n      onChange = {(selectedOption) => {\n          const value = selectedOption.value;\n          const updatedParams = value\n            ? {\n                ...queryParams,\n                subject: value,\n            }\n            : omit(queryParams, \"subject\");\n\n            setQueryParams(updatedParams);\n\n        }\n        }\n      /> \n\n\n\n\n\n\n      {/* some course filter */}\n\n      <Select label = \"Course\" options = {CourseOptions} \n        placeholder = \"Course\"\n        onChange = {(selectedOption) => {\n          const value = selectedOption.value;\n          const updatedParams = value\n            ? {\n                ...queryParams,\n                course: value,\n            }\n            : omit(queryParams, \"course\");\n\n            setQueryParams(updatedParams);\n\n        }\n        }\n      /> \n\n\n\n      <TextField class = \"searchBar\"\n              fullWidth\n              placeholder=\"Notes\"\n              type=\"text\"\n              onChange={(e) => {\n                const value = e.target.value;\n                const updatedParams = value\n                  ? {\n                      ...queryParams,\n                      notes: value,\n                    }\n                  : omit(queryParams, \"notes\"); //Instead of omitting, we should add it to the options.\n\n                setQueryParams(updatedParams);\n              }}\n            />\n\n            </div>\n\n\n\n\n\n\n             \n      {!isLoading && <NotesTable rows={notes} />}\n    </div>\n    </>\n  );\n}\n","import HomePage from \"./HomePage\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HomePage />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}